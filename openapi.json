{
  "components" : {
    "schemas" : {
      "ApiColumn" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "position" : {
            "format" : "int32",
            "type" : "integer"
          },
          "tableName" : {
            "type" : "string"
          },
          "tpe" : {
            "type" : "string"
          }
        },
        "required" : [
          "tableName",
          "name",
          "tpe",
          "position"
        ],
        "type" : "object"
      },
      "ApiExternalFunction" : {
        "properties" : {
          "functionName" : {
            "type" : "string"
          },
          "parameterTypes" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "returnType" : {
            "type" : "string"
          }
        },
        "required" : [
          "functionName",
          "returnType"
        ],
        "type" : "object"
      },
      "ApiTable" : {
        "properties" : {
          "columns" : {
            "items" : {
              "$ref" : "#/components/schemas/ApiColumn"
            },
            "type" : "array"
          },
          "name" : {
            "type" : "string"
          },
          "position" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [
          "name",
          "position"
        ],
        "type" : "object"
      },
      "ApiTableData" : {
        "properties" : {
          "rows" : {
            "items" : {
              "$ref" : "#/components/schemas/TableRow"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ApiWorkspace" : {
        "properties" : {
          "externalFunctions" : {
            "items" : {
              "$ref" : "#/components/schemas/ApiExternalFunction"
            },
            "type" : "array"
          },
          "name" : {
            "type" : "string"
          },
          "tables" : {
            "items" : {
              "$ref" : "#/components/schemas/ApiTable"
            },
            "type" : "array"
          }
        },
        "required" : [
          "name"
        ],
        "type" : "object"
      },
      "PresignedUrl" : {
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "putUrl" : {
            "type" : "string"
          }
        },
        "required" : [
          "putUrl",
          "description"
        ],
        "type" : "object"
      },
      "TableRow" : {
        "properties" : {
          "id" : {
            "format" : "int32",
            "type" : "integer"
          },
          "values" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [
          "id"
        ],
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "oauth2Auth" : {
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://auth.alpha.priceloop.ai/oauth2/authorize",
            "scopes" : {
              "user/api" : "Access to the Priceloop API"
            },
            "tokenUrl" : "https://auth.alpha.priceloop.ai/oauth2/token"
          }
        },
        "type" : "oauth2"
      }
    }
  },
  "info" : {
    "description" : "Connect to your Priceloop Data through our API.",
    "title" : "Priceloop-API",
    "version" : "v0.61.1"
  },
  "openapi" : "3.0.3",
  "paths" : {
    "/api/v1.0/hello" : {
      "get" : {
        "operationId" : "hello",
        "responses" : {
          "200" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        }
      }
    },
    "/api/v1.0/hello-auth" : {
      "get" : {
        "operationId" : "helloAuth",
        "responses" : {
          "200" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      }
    },
    "/api/v1.0/redirect" : {
      "get" : {
        "operationId" : "redirect",
        "parameters" : [
          {
            "in" : "query",
            "name" : "state",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "query",
            "name" : "selling_partner_id",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "query",
            "name" : "spapi_oauth_code",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "303" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "",
            "headers" : {
              "Location" : {
                "required" : true,
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "Invalid value for: query parameter state, Invalid value for: query parameter selling_partner_id, Invalid value for: query parameter spapi_oauth_code"
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        }
      }
    },
    "/api/v1.0/workspaces" : {
      "get" : {
        "description" : "List all your existing workspaces.",
        "operationId" : "listWorkspaces",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : ""
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      }
    },
    "/api/v1.0/workspaces/{workspace}" : {
      "get" : {
        "description" : "Get all details about your workspace.",
        "operationId" : "getWorkspace",
        "parameters" : [
          {
            "in" : "path",
            "name" : "workspace",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiWorkspace"
                }
              }
            },
            "description" : ""
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      },
      "post" : {
        "description" : "Create a workspace from a userId.",
        "operationId" : "createWorkspace",
        "parameters" : [
          {
            "in" : "path",
            "name" : "workspace",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      }
    },
    "/api/v1.0/workspaces/{workspace}/external-functions/{function}" : {
      "delete" : {
        "description" : "Delete an existing external function.",
        "operationId" : "deleteExternalFunction",
        "parameters" : [
          {
            "in" : "path",
            "name" : "workspace",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "function",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : ""
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      },
      "get" : {
        "description" : "Get details about your existing external function.",
        "operationId" : "getExternalFunctions",
        "parameters" : [
          {
            "in" : "path",
            "name" : "workspace",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "function",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiExternalFunction"
                }
              }
            },
            "description" : ""
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      },
      "post" : {
        "description" : "Create a new external function, specifying the function name, runtime, return type and the paremeter types. This API endpoint returns a url, to which you can upload your function code. You can do a PUT request on the returned url, e.g.: curl -XPUT -T <zip-file> '<url>'.",
        "operationId" : "createExternalFunction",
        "parameters" : [
          {
            "in" : "path",
            "name" : "workspace",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "function",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "query",
            "name" : "runtime",
            "required" : true,
            "schema" : {
              "enum" : [
                "python",
                "python_numpy",
                "python_pandas",
                "nodejs",
                "go"
              ],
              "type" : "string"
            }
          },
          {
            "in" : "query",
            "name" : "returnType",
            "required" : true,
            "schema" : {
              "enum" : [
                "number",
                "string",
                "boolean",
                "date",
                "json"
              ],
              "type" : "string"
            }
          },
          {
            "description" : "Specify parameter types. Expected: number,string,boolean,date,json",
            "in" : "query",
            "name" : "paramType",
            "required" : false,
            "schema" : {
              "items" : {
                "type" : "string"
              },
              "type" : "array"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PresignedUrl"
                }
              }
            },
            "description" : ""
          },
          "400" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "Invalid value for: query parameter runtime, Invalid value for: query parameter returnType, Invalid value for: query parameter paramType"
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      },
      "put" : {
        "description" : "Create the code of an existing external function. This API endpoint returns a url, to which you can upload your function code. You can do a PUT request on the returned url, e.g.: curl -XPUT -T <zip-file> '<url>'.",
        "operationId" : "updateExternalFunction",
        "parameters" : [
          {
            "in" : "path",
            "name" : "workspace",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "function",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PresignedUrl"
                }
              }
            },
            "description" : ""
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      }
    },
    "/api/v1.0/workspaces/{workspace}/tables/{table}" : {
      "delete" : {
        "description" : "Delete your table.",
        "operationId" : "deleteTable",
        "parameters" : [
          {
            "in" : "path",
            "name" : "workspace",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "table",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : ""
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      },
      "get" : {
        "description" : "Get the metadata of your table.",
        "operationId" : "getTable",
        "parameters" : [
          {
            "in" : "path",
            "name" : "workspace",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "table",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiTable"
                }
              }
            },
            "description" : ""
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      }
    },
    "/api/v1.0/workspaces/{workspace}/tables/{table}/columns/{column}" : {
      "put" : {
        "description" : "Change column position in a table.",
        "operationId" : "updateColumnPosition",
        "parameters" : [
          {
            "in" : "path",
            "name" : "workspace",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "table",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "column",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "query",
            "name" : "position",
            "required" : true,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : ""
          },
          "400" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "Invalid value for: query parameter position"
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      }
    },
    "/api/v1.0/workspaces/{workspace}/tables/{table}/columns/{column}/data" : {
      "post" : {
        "description" : "Add a data column to a table.",
        "operationId" : "addDataColumn",
        "parameters" : [
          {
            "in" : "path",
            "name" : "workspace",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "table",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "column",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "query",
            "name" : "type",
            "required" : false,
            "schema" : {
              "default" : "string",
              "enum" : [
                "string",
                "number",
                "boolean",
                "date",
                "json"
              ],
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiColumn"
                }
              }
            },
            "description" : ""
          },
          "400" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "Invalid value for: query parameter type"
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      }
    },
    "/api/v1.0/workspaces/{workspace}/tables/{table}/columns/{column}/formula" : {
      "post" : {
        "description" : "Add an expression column to a table.",
        "operationId" : "addFormulaColumn",
        "parameters" : [
          {
            "in" : "path",
            "name" : "workspace",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "table",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "column",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "query",
            "name" : "expression",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiColumn"
                }
              }
            },
            "description" : ""
          },
          "400" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "Invalid value for: query parameter expression"
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      }
    },
    "/api/v1.0/workspaces/{workspace}/tables/{table}/data" : {
      "get" : {
        "description" : "Get the data of your table.",
        "operationId" : "getTableData",
        "parameters" : [
          {
            "in" : "path",
            "name" : "workspace",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "table",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "query",
            "name" : "limit",
            "required" : true,
            "schema" : {
              "exclusiveMinimum" : true,
              "format" : "int32",
              "minimum" : 0,
              "type" : "integer"
            }
          },
          {
            "in" : "query",
            "name" : "offset",
            "required" : true,
            "schema" : {
              "format" : "int32",
              "minimum" : 0,
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiTableData"
                }
              }
            },
            "description" : ""
          },
          "400" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "Invalid value for: query parameter limit, Invalid value for: query parameter offset"
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      }
    },
    "/api/v1.0/workspaces/{workspace}/tables/{table}/truncate" : {
      "post" : {
        "description" : "Truncate your table.",
        "operationId" : "truncateTable",
        "parameters" : [
          {
            "in" : "path",
            "name" : "workspace",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "table",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : ""
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      }
    },
    "/api/v1.0/workspaces/{workspace}/tables/{table}/upload-csv-url" : {
      "get" : {
        "description" : "Upload a CSV file into your table. This API endpoint returns a url, to which you can upload your csv file. You can do a PUT request on the returned url, e.g.: curl -XPUT -T <csv-file> '<url>'.",
        "operationId" : "getTableUploadCsvUrl",
        "parameters" : [
          {
            "in" : "path",
            "name" : "workspace",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "table",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "query",
            "name" : "mode",
            "required" : false,
            "schema" : {
              "default" : "new",
              "enum" : [
                "new",
                "delete_and_recreate",
                "replace_data",
                "append_data"
              ],
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PresignedUrl"
                }
              }
            },
            "description" : ""
          },
          "400" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "Invalid value for: query parameter mode"
          },
          "default" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : ""
          }
        },
        "security" : [
          {
            "oauth2Auth" : [
            ]
          }
        ]
      }
    }
  }
}